#
# main prefix
#
set    -g prefix M-x
unbind           C-b
bind             M-x send-prefix

#
# general options
#
#set -g mouse-resize-pane     on # v1.x
#set -g mouse-select-pane     on # v1.x 
#set -g mouse-select-window   on # v1.x
#set -g mode-mouse            on # v1.x
set -g mouse-utf8 on
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

set -g xterm-keys            on
set -g status-justify      left #centre
set -g history-limit       5000
set -g display-time       10000 # time (ms) to show info in the bar (it's removed when a key is pressed)
set -g display-panes-time 10000 # time (ms) to show panes id (they're removed when a key is pressed)
set -g escape-time            0 # to avoid delays using escape in vim
set -g mode-keys             vi

set -g status                      on     # on by default, just in case
set -g monitor-activity            off    # disabled because is too noisy when resizing terminator
set -g visual-activity             off
set -g window-status-current-fg    green 
set -g window-status-current-bg    black
set -g window-status-current-attr  bright
set -g window-status-activity-fg   red
set -g window-status-activity-bg   black
set -g window-status-activity-attr bright

set -g status-right                '#{?pane_synchronized,#[reverse]SYNC#[noreverse] ,} #{?client_prefix,#[reverse]Prefix#[noreverse] ,} %H:%M %d-%b'  # to add visual help when prefix pressed 
#set -g status-right                '#{?client_prefix,#[reverse] Prefix ,}  %H:%M %d-%b'  # to add visual help when prefix pressed 

#
# direct prompt
#
bind -n M-:       command-prompt
bind -n M-q       detach

#
# sessions
#
#bind -n M-s       new-session\;\
#                  command-prompt 'rename-sesion %%'

#
# tab/windows control
#
# creation
bind -n M-t       new-window -a\;\
                  command-prompt 'rename-window %%'
bind -n M-r       command-prompt 'rename-window %%'
bind -n M-|       split-window -h
bind -n M--       split-window -v
# navigation
bind -n M-Up      select-pane -U
bind -n M-Down    select-pane -D
bind -n M-Left    select-pane -L  
bind -n M-Right   select-pane -R
bind -n M-S-Left  prev
bind -n M-S-Right next
bind -n M-w       last-window
bind -n M-e       last-pane
bind -n M-d       display-panes
# move/swap
bind -n M-S-Up     swap-window -t -1
bind -n M-S-Down   swap-window -t +1
#bind      S-Left  swap-pane -L # not yet an option?
#bind      S-Right swap-pane -R # not yet an option?
bind      S-Up     swap-pane -U
bind      S-Down   swap-pane -D
bind -n M-m        select-pane -m
bind -n M-j        join-pane
bind -n M-b        break-pane
bind -n M-s        swap-pane
# resize
bind -n M-Space  resize-pane -Z
bind -r M-Up     resize-pane -U
bind -r M-Down   resize-pane -D
bind -r M-Right  resize-pane -R 
bind -r M-Left   resize-pane -L
# sync
bind -n M-g      set-window-option synchronize-panes # toggles
# using right window as a container for bottom panes (IDE-like)
bind -n M-PageUp   swap-pane -s :+.top    -t :.bottom \; rotate-window -Ut :+
bind -n M-PageDown swap-pane -s :+.bottom -t :.bottom \; rotate-window -Dt :+
bind -n M-DC       join-pane -vdt :+.bottom
bind -n M-IC       join-pane -vs  :+.bottom -p 20

#
# Copy-paste
#
bind -n         M-c  copy-mode
bind -t vi-copy   v  begin-selection
bind -t vi-copy   y  copy-selection
bind -n         M-p  paste-buffer
bind -t vi-copy End  end-of-line
bind -t vi-copy Home start-of-line
#bind -t vi-copy   b  begin-selection
#bind -t vi-copy   v  copy-selection
#bind -t vi-copy   y  copy-pipe 'xclip -in -selection clipboard' #not tested

